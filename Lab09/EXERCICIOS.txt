======= EXERCICIO 1 =============
#include <stdio.h>
/*1. Escreva um programa que declare um inteiro, um real e um char, e ponteiros para inteiro,
real e char. Associe as variáveis aos ponteiros (use &). Modifique os valores de cada variável
usando os ponteiros. Imprima os valores das variáveis antes e após a modificação.*/

void main()
{
    int x = 10, *xp;
    float y = 0.5;
    float *yp;
    char z = 'a', *zp;
    xp = &x;
    yp = &y;
    zp = &z;

    printf("O valor inteiro eh %d\nO valor real eh %.2f\nO valor char eh %c\n", *xp, *yp, *zp);

    printf("=====ALTERANDO VALORES=====");
    *xp = 150;
    *yp = 3.5;
    *zp = 'b';
    printf("\nO novo valor inteiro eh %d\nO novo valor real eh %.2f\nO novo valor char eh %c\n", *xp, *yp, *zp);




}

======= EXERCICIO 2 =============

#include <stdio.h>
/*2. Escreva um programa que contenha duas variávei sinteiras. Compare seus endereços e exiba
o maior endereço*/

void main()
{
    int x, y;
    int *xp, *yp;


    printf("Digite duas variaveis inteira, para que os enderecos delas sejam comparados\n");
    printf("Variavel 1: \n");
    scanf("%d", &x);
    printf("Variavel 2: \n");
    scanf("%d", &y);

    xp = &x;
    yp = &y;

    if(xp > yp)
    {
        printf("\nA Variavel 1 tem um endereco maior\nEndereco: %d", xp);

    }else
    {
        if(yp > xp)
        {
            printf("\nA Variavel 2 tem um endereco maior\nEndereco: %d", yp);
        }
    }
    printf("\nEndereco da Variavel 1: %d\nEndereco da Variavel 2: %d", xp, yp);
    }

======= EXERCICIO 3 =============


#include <stdio.h>
/*3. Escreva um programa que contenha duas variáveis inteiras. Leia essas variáveis do teclado.
Em seguida, compare seus endereços e exiba o conteúdo do maior endereço*/

void main()
{
    int x, y;
    int *xp, *yp;


    printf("Digite duas variaveis inteiras, para que os enderecos delas sejam comparados\n");
    printf("Variavel 1: \n");
    scanf("%d", &x);
    printf("Variavel 2: \n");
    scanf("%d", &y);

    xp = &x;
    yp = &y;

    if(xp > yp)
    {
        printf("\nA Variavel 1 tem um endereco maior\nValor: %d", *xp);

    }else
    {
        if(yp > xp)
        {
            printf("\nA Variavel 2 tem um endereco maior\Valor: %d", *yp);
        }
    }
    printf("\nEndereco da Variavel 1: %d\nEndereco da Variavel 2: %d", xp, yp);
    }

======= EXERCICIO 4 =============

#include <stdio.h>
/*4. Faça um programa que leia 2 valores inteiros e chame uma função que receba estas 2
variáveis e troque o seu conteúdo, i.e., esta função é chamada passando duas variáveis A e
B, por exemplo, e após a execução da função, A conterá o valor de B e B terá o valor de A.*/

void trocaValor(int a, int b);

void main()
{
    int x, y;
    printf("Digite dois valores inteiros: \n");
    scanf("%d %d", &x, &y);

    trocaValor(x, y);
}
void trocaValor(int a, int b)
{
    int *ap, *bp;
    ap = &b;
    bp = &a;
    printf("\nValores trocados: %d e %d\n", *ap, *bp);
}

======= EXERCICIO 5 =============
#include <stdio.h>
/*5. Faça um programa que leia dois valores inteiros e chame uma função que receba estes 2
valores de entrada e retorne o maior valor na primeira variável e o menor valor na segunda
variável. Escreva o conteúdo das 2 variáveis na tela.*/

void trocaValor(int *a, int *b);

void main()
{
    int x, y;
    printf("Digite dois valores inteiros\n");
    printf("Variavel 1: \n");
    scanf("%d", &x);
    printf("Variavel 2: \n");
    scanf("%d", &y);


    trocaValor(&x, &y);
    printf("Maior valor esta na Variavel 1: %d\nVariavel 2: %d\n", x, y);

}
void trocaValor(int *a, int *b)
{
    int aux;
    if(*b > *a)
    {
        aux = *b;
        *b = *a;
        *a = aux;
    }
}

======= EXERCICIO 6 =============

#include <stdio.h>
#include <stdlib.h>
/*6. Elaborar um programa que leia dois valores inteiros (A e B). Em seguida faça uma função
que retorne a soma do dobro dos dois números lidos. A função deverá armazenar o dobro
de A na própria variável A e o dobro de B na própria variável B.*/

int somaDobro(int *ap, int *bp);

void main()
{
   int a, b;

   printf("Digite dois valores inteiros, para ser retornado a soma do dobro dos numeros inseridos: \n");
   printf("Valor A: \n");
   scanf("%d", &a);
   printf("Valor B: \n");
   scanf("%d", &b);
   system("cls");
   printf("A soma do dobro de %d e %d eh %d", a, b, somaDobro(&a, &b));


}
int somaDobro(int *ap, int *bp)
{
    int soma;
    *ap = *ap * 2;
    *bp = *bp * 2;
    soma = *ap + *bp;
    return soma;
}


======= EXERCICIO 7 =============

#include <stdio.h>
#include <stdlib.h>
/*7. Crie um programa que contenha uma função que permita passar por parâmetro dois
números inteiros A e B. A função deverá calcular a soma entre estes dois números e
armazenar o resultado na variável A. Esta função não deverá possuir retorno, mas deverá
modificar o valor do primeiro parâmetro. Imprima os valores de A e B na função principal.
*/

void soma(int *ap, int *bp);

void main()
{
   int a, b;

   printf("Digite dois valores inteiros, para ser retornado a soma entre os numeros inseridos: \n");
   printf("Valor A: \n");
   scanf("%d", &a);
   printf("Valor B: \n");
   scanf("%d", &b);
   system("cls");
   printf("A soma entre %d e %d eh: \n", a, b);
   soma(&a, &b);
   printf("%d", a);


}
void soma(int *ap, int *bp)
{
    *ap = *ap + *bp;
}


======= EXERCICIO 8 =============

#include <stdio.h>
#include <stdlib.h>

/*8. Crie um programa que contenha um array de float contendo 10 elementos. Imprima o
endereço de cada posição desse array*/
int main(){

    int i;
    int vetor[10] = {0,1,2,3,4,5,6,7,8,9};

    for(i = 0; i < 10; i++)
        printf("Endereco: %p\tConteudo: %d\n", vetor + i, *(vetor + i));

    return 0;
}

======= EXERCICIO 9 =============

/*9. Crie um programa que contenha uma matriz de float contendo 3 linhas e 3 colunas. Imprima
o endereço de cada posição dessa matriz*/

#include <stdio.h>

int main()
{
    float matriz[3][3], *endereco;

    for (int i = 0; i < 3; i++)
    {
        for (int j = 0; j < 3; j++)
        {
            endereco = &matriz[i][j];
            printf("Endereco do conteudo [%d][%d]: %p\n", i, j, endereco);
        }
    }
}

======= EXERCICIO 10 =============

/*10. Crie um programa que contenha um array de inteiros contendo 5 elementos. Utilizando
apenas aritmética de ponteiros, leia esse array do teclado e imprima o dobro de cada valor
lido.*/

#include <stdio.h>

int main()
{
    int vet[5];
    int *pont = vet;

    for (int i = 0; i < 5; ++i)
    {
        printf("Digite o valor para o array de posicao %d: \n", i);
        scanf("%d", pont);
        ++pont;
    }
    pont = vet;
    for (int j = 0; j < 5; ++j)
    {

        printf("Vetor[%d] - Dobro: %d\n", j, (*pont) * 2);
        ++pont;
        }
return 0;

}

======= EXERCICIO 11 =============

/*11. Crie um programa que contenha um array contendo 5 elementos inteiros. Leia esse array
do teclado e imprima o endereço das posições contendo valores pares.*/

int main ()
{
    int vet[5];
    int *pont;

    for(int i = 0; i < 5; ++i)
    {
        printf("Digite o valor da vetor[%d]: \n", i);
        scanf("%d", &vet[i]);
    }
    for (int j = 0; j < 5; ++j){
            if ((vet[j] % 2) == 0)
            {
                pont = &vet[j];
                printf("Vetor[%d] eh par \tEndereco: %d\n", j, pont);

            }
    }
    return 0;
}

======= EXERCICIO 12 =============
/*12. Faça um programa que leia três valores inteiros e chame uma função que receba estes 3
valores de entrada e retorne eles ordenados, ou seja, o menor valor na primeira variável, o
segundo menor valor na variável do meio, e o maior valor na última variável. A função deve
retornar o valor 1 se os três valores forem iguais e 0 se existirem valores diferentes. Exibir
os valores ordenados na tela.*/
#include <stdlib.h>
#include <stdio.h>

void ordenados(int x, int y, int z);
void main()
{
  int x, y, z;

  printf("Insira tres valores inteiros: \n");
  scanf("%d %d %d", &x, &y, &z);

  ordenados(x, y, z);


}
void ordenados(int x, int y, int z)
{


    int *xp = &x;
    int *yp = &y;
    int *zp = &z;

    int result = qsort(xp, yp, zp);

  if (result == 1)
  {
    printf("Os valores sao iguais\n");
  }
  else
  {
    printf("%d %d %d\n", x, y, z);
  }

}







